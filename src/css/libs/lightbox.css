html.lb-disable-scrolling {
	overflow: hidden;
	position: fixed;
	height: 100vh;
	width: 100vw;
}

.lightboxOverlay {
	position: absolute;
	top: 0;
	left: 0;
	z-index: 99;
	background-color: #000;
	opacity: 0.8;
	display: none;
}

.lightbox {
	position: absolute;
	left: 0;
	width: 100%;
	height: 100vh;
	z-index: 100;
	text-align: center;
	line-height: 0;
	font-weight: 400;
}
.lightbox .lb-image {
	display: block;
	height: auto;
	max-width: inherit;
	max-height: none;
}
@media (max-width: 767.98px) {
	.lightbox .lb-image {
		max-width: 80vw;
	}
}
.lightbox a img {
	border: none;
}

.lb-outerContainer {
	position: absolute;
	top: 50%;
	left: 50%;
	-webkit-transform: translate(-50%, -50%);
	    -ms-transform: translate(-50%, -50%);
	        transform: translate(-50%, -50%);
	width: 250px;
	height: 250px;
	margin: 0 auto;
	border-radius: 4px;
	background-color: #fff;
}
.lb-outerContainer::after {
	content: "";
	display: block;
	clear: both;
}

.lb-loader {
	position: absolute;
	top: 43%;
	left: 0;
	height: 25%;
	width: 100%;
	text-align: center;
	line-height: 0;
}

.lb-cancel {
	display: block;
	width: 32px;
	height: 32px;
	margin: 0 auto;
	background: url("../../img/lightbox/loading.gif") no-repeat;
}

.lb-nav {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	z-index: 10;
}
.lb-nav a {
	outline: none;
	background-image: url("data:image/gifbase64,R0lGODlhAQABAPAAAP///wAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==");
}
.lb-nav a.lb-prev, .lb-nav a.lb-next {
	height: 100%;
	cursor: pointer;
	display: block;
	opacity: 0.4;
	-webkit-transition: opacity 0.6s;
	-o-transition: opacity 0.6s;
	transition: opacity 0.6s;
}
.lb-nav a.lb-prev {
	width: 34%;
	left: 0;
	float: left;
	background: url("../../img/lightbox/prev.png") left 48% no-repeat;
}
.lb-nav a.lb-prev:hover {
	opacity: 1;
}
.lb-nav a.lb-next {
	width: 64%;
	right: 0;
	float: right;
	background: url("../../img/lightbox/next.png") right 48% no-repeat;
}
.lb-nav a.lb-next:hover {
	opacity: 1;
}

.lb-container > .nav {
	left: 0;
}

.lb-dataContainer {
	position: absolute;
	bottom: -37px;
	left: 50%;
	-webkit-transform: translateX(-50%);
	    -ms-transform: translateX(-50%);
	        transform: translateX(-50%);
	width: calc(100% - 160px) !important;
}

.lb-data {
	color: #ccc;
}
.lb-data .lb-details {
	width: 100%;
	text-align: right;
	line-height: 1.1em;
}
.lb-data .lb-caption {
	font-size: 13px;
	font-weight: 700;
	line-height: 1em;
}
.lb-data .lb-caption a {
	color: #4ae;
}
.lb-data .lb-number {
	text-align: center;
	display: block;
	clear: left;
	padding-bottom: 1em;
	font-size: 12px;
	color: #999999;
}

.lb-close {
	position: absolute;
	z-index: 10;
	top: 100px;
	right: 100px;
	display: block;
	width: 33px;
	height: 33px;
	background: url("../../img/lightbox/close.png") top right no-repeat;
	text-align: right;
	outline: none;
	opacity: 0.7;
	-webkit-transition: opacity 0.2s;
	-o-transition: opacity 0.2s;
	transition: opacity 0.2s;
}
.lb-close:hover {
	cursor: pointer;
	opacity: 1;
}

@media (max-width: 767.98px) {
	.lb-nav a.lb-prev {
		background: url("../../img/lightbox/prev-xs.png") left 48% no-repeat;
	}
	.lb-nav a.lb-next {
		background: url("../../img/lightbox/next-xs.png") right 48% no-repeat;
	}

	.lb-close {
		top: 20px;
		right: 20px;
	}
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
